# Repository의 Actions 탭에 나타날 Workflow 이름으로 필수 옵션은 아님
name: CI PipeLine 

# Workflow를 실행시키기 위한 Event 목록
on:
  # 하단 코드에 따라 develop 브랜치에 Push 또는 Pull Request 이벤트가 발생한 경우에 Workflow가 실행
  # 만약 브랜치 구분 없이 이벤트를 지정하고 싶을 경우에는 단순히 아래와 같이 작성도 가능함
  # on: [push, pull_request] 
  pull_request:
    branches:
      - main
      
# 해당 옵션을 통해 사용자가 직접 Actions 탭에서 Workflow를 실행시킬 수 있음
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  
# 해당 Workflow의 하나 이상의 Job 목록
jobs:
  gradle-build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build

    - name: Upload Gradle Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: build-artifact
        path: build/libs/*-SNAPSHOT.jar

  docker-push:
    needs: gradle-build
    runs-on: ubuntu-latest

    permissions: 
      contents: read
      packages: write 
          
    steps:
    - uses: actions/checkout@v3

    - name: Docker Login
      uses: docker/login-action@v1.12.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Download Gradle Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: build-artifact

    - name: Docker Build
      run: docker build -t ${{ env.REGISTRY }}/${{ github.repository }} .

    - name: Docker push
      run: docker push ${{ env.REGISTRY }}/${{ github.repository }}
